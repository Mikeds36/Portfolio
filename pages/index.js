import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {useEffect, useState} from "react";
import {google as gapi} from "googleapis";

const SPREADSHEET_ID = '1yjE0QMeangSgGg5mAS7KZXyGLdKwO0n2HNmUD3FIM-I'; //from the URL of your blank Google Sheet
const CLIENT_ID = '1082397394331-f4ercooh4a7pqb4fq2v163qqj0jfe82n.apps.googleusercontent.com'; //from https://console.developers.google.com/apis/credentials
const API_KEY = 'AIzaSyDPfotbB-60LG5M6oZAppbe_i3pGAKy5jA'; //from https://console.developers.google.com/apis/credentials
const SCOPE = 'https://www.googleapis.com/auth/spreadsheets';

function Header() {
  return (
      <Head>
          <title>Mikeds&apos; Portfolio</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width; height=device-height"/>
          <link rel="icon" href="/favicon.ico" />
      </Head>
  )
}

function SiteHeader() {
    return (
        <header className={styles.header}>
            <ul>
                <li>
                    <a href={'#About'}>About</a>
                </li>
                <li>
                    <a href={'#Skill'}>Skills</a>
                </li>
                <li>
                    <a href={"#Work"}>Work</a>
                </li>
                <li>
                    <a href={"#Contact"}>Contact</a>
                </li>
            </ul>
        </header>
    )
}

function Main() {
    return (
        <main className={styles.main}>
            <SiteHeader />
            <MainArticle />
            <AboutArticle />
            <SkillArticle />
            <WorkArticle />
            <ContactArticle />
            <Footer />
        </main>
    )
}

function MainArticle() {
    return (
        <article id={'main'} className={styles['main-article']}>
            <h1>Mikeds</h1>
            <hr />
            <h2>프로그래머 지망</h2>
        </article>
    )
}

function AboutArticle() {
    return (
        <article id={'About'} className={styles['main-article']}>
            <h1>Mikeds</h1>
            <hr />
            <h2>프로그래머 지망</h2>
        </article>
    )
}

function SkillArticle() {
    return (
        <article id={'Skill'} className={styles['skill-article']}>
            <div>
                <h1>I used to do things like this</h1>
                <hr />
                <div className={styles['skill-image']}>
                    <Image src="/Skill/php-logo.png" alt="PHP Logo" width={100} height={47} />
                    <Image src="/Skill/html5-logo.png" alt="HTML5 Logo" width={70} height={108}/>
                    <Image src="/Skill/node-sass-logo.png" alt="Sass Logo" width={91} height={108}/>
                    <Image src="/Skill/javascript-logo.png" alt="Javascript Logo" width={108} height={108}/>
                    <Image src="/Skill/Daco_2563210.png" alt="SQL Logo" width={136} height={62}/>
                </div>
            </div>

            <div>
                <h1>And i also did these things</h1>
                <hr />
                <div className={styles['skill-image']}>
                    <Image src="/Skill/python-logo.png" alt="Python Logo" width={108} height={108} />
                    <Image src="/Skill/linux-logo-1.png" alt="Linux Logo" width={108} height={108} />
                    <Image src="/Skill/raspberry-pi-logo.png" alt="C Logo" width={80} height={108} />
                    <Image src="/Skill/c-logo-1.png" alt="C Logo" width={93} height={108} />
                    <Image src="/Skill/java-logo-1.png" alt="C Logo" width={108} height={108} />
                </div>
            </div>
        </article>
    )
}

function WorkArticle() {
    return (
        <article id={"Work"} className={styles['work-article']}>

        </article>
    )
}

function ContactArticle() {
    const [name, setName] = useState('')
    const [email, setEmail] = useState('')
    const [subject, setSubject] = useState('')
    const [message, setMessage] = useState('')
    const [submitted, setSubmitted] = useState(false)

    let sheet;

    useEffect(() =>{
        initClient();
    }, [])

    const initClient = () => {
         sheet = gapi.sheets({
            version: "v4",
            auth: API_KEY
        });
    }

    const handleSubmit = (e) => {
        e.preventDefault()
        console.log('sending')

        const params = {
            // The ID of the spreadsheet to update.
            spreadsheetId: SPREADSHEET_ID,
            // The A1 notation of a range to search for a logical table of data.Values will be appended after the last row of the table.
            range: 'Sheet1', //this is the default spreadsheet name, so unless you've changed it, or are submitting to multiple sheets, you can leave this
            // How the input data should be interpreted.
            valueInputOption: 'RAW', //RAW = if no conversion or formatting of submitted data is needed. Otherwise USER_ENTERED
            // How the input data should be inserted.
            insertDataOption: 'INSERT_ROWS', //Choose OVERWRITE OR INSERT_ROWS
            resource: {
                'values': [e]
            },
        };

        let request = sheet.spreadsheets.values.append(params);
        request.then(function (response) {
            // TODO: Insert desired response behaviour on submission
            console.log(response);
        }, function (reason) {
            console.error('error: ' + reason.result.error.message);
        });

        let data = {
            name,
            email,
            subject,
            message
        }

        fetch('/api/contact', {
            method: 'POST',
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then((res) => {
            console.log('Response received')
            if (res.status === 200) {
                console.log('Response succeeded!')
                setSubmitted(true)
                setName('')
                setEmail('')
                setSubject('')
                setMessage('')
            }
        })
    }

    return (
        <article id={"Contact"} className={styles['contact-article']}>
            <div className={styles['contact-title']}>
                <h1>CONTACT ME</h1>
                <hr />
            </div>
            <form className={styles['contact-form']} onSubmit={handleSubmit}>
                <input
                    id={"name"}
                    type={"text"}
                    onChange={(e) => {setName(e.target.value)}}
                    className={styles['contact-form_input']}
                    placeholder={"Name"}/>
                <input
                    id={"email"}
                    type={"email"}
                    onChange={(e) => {setEmail(e.target.value)}}
                    className={styles['contact-form_input']}
                    placeholder={"Email"}/>
                <input
                    id={"subject"}
                    type={"text"}
                    onChange={(e) => {setSubject(e.target.value)}}
                    className={styles['contact-form_input']}
                    placeholder={"Subject"}/>

                <textarea
                    id={"message"}
                    onChange={(e) => {setMessage(e.target.value)}}
                    className={styles['contact-form_input']}
                    placeholder={"Message"} />
                <input
                    type="submit"
                    className={styles['contact-form_input']}
                    value={"Submit"}
                />
            </form>

        </article>
    )
}

function Footer() {
  return (
      <footer className={styles.footer}>
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
      </footer>
  )
}

export default function Home() {
  return (
    <div className={styles.container}>
        <Header />
        <Main />
    </div>
  )
}
